# ==================================================================
# QUANTUM'S KUBERNETES INGRESS
# Advanced ingress configuration with SSL and rate limiting
# ==================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: astral-turf-ingress
  namespace: astral-turf
  labels:
    app.kubernetes.io/name: astral-turf
    app.kubernetes.io/component: ingress
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"
    
    # SSL Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/session-cookie-name: "astral-session"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    
    # Performance optimizations
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    
    # Compression
    nginx.ingress.kubernetes.io/enable-brotli: "true"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://astral-turf.com,https://app.astral-turf.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Custom error pages
    nginx.ingress.kubernetes.io/custom-http-errors: "404,500,502,503,504"
    nginx.ingress.kubernetes.io/default-backend: "astral-turf-error-pages"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "false"

spec:
  tls:
  - hosts:
    - astral-turf.com
    - www.astral-turf.com
    - app.astral-turf.com
    - api.astral-turf.com
    secretName: astral-turf-tls
  
  rules:
  # Main application domain
  - host: astral-turf.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80
  
  # WWW redirect
  - host: www.astral-turf.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80
  
  # Application subdomain
  - host: app.astral-turf.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astral-turf-service
            port:
              number: 3000
  
  # API subdomain
  - host: api.astral-turf.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astral-turf-service
            port:
              number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: astral-turf-internal-ingress
  namespace: astral-turf
  labels:
    app.kubernetes.io/name: astral-turf
    app.kubernetes.io/component: internal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: admin-auth
    nginx.ingress.kubernetes.io/auth-realm: "Admin Access Required"

spec:
  tls:
  - hosts:
    - admin.astral-turf.internal
    - metrics.astral-turf.internal
    secretName: internal-tls
  
  rules:
  # Admin interface
  - host: admin.astral-turf.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astral-turf-service
            port:
              number: 3000
  
  # Metrics endpoint
  - host: metrics.astral-turf.internal
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: astral-turf-service
            port:
              number: 9090